-------------------------------------------------------------------------------------------------------------------
#Basic Ubuntu command
-------------------------------------------------------------------------------------------------------------------

# To open a new window of ubuntu 

code -n <folder-or-file-path>


# to clear the build 

rm -rf build/ install/ log/

# command that need to always re-do

source /opt/ros/humble/setup.bash

colcon build
colcon build --symlink-install

source install/setup.bash

# Dependencies: Ensure all dependencies are installed

rosdep install --from-paths src --ignore-src -r -y

# to get the tree of directories

tree -a src/medibots

#### To launch robot_state_publisher

 ros2 launch medibot_gazebo robot_state_publisher_copy.launch.py use_sim_time:=true robot_description:=/home/helium/fyp_ws/src/medibot/medibot_simulations/medibot_gazebo/urdf/medibot_medibotv4.urdf 


#launch file for trial1 (ilham_ws)

ros2 launch medibots launch_sim.launch world:=src/worlds/shapes.sdf

Note: if you accidentally pressed Ctrl-Z instead of Ctrl-C when trying to exit Gazebo, Gazebo will be detached and asleep. To be able to close it:

# to check if there is stopped job

 jobs -l

[1]+ 14096 Stopped  ros2 launch fwd_bot launch_sim.launch world:=src/worlds/shapes.sdf

# Now we can use this "1":

 fg %1

# Then Gazebo is awake and can be killed:
 killall -9 gzserver
 killall -9 gzclient

-------------------------------------------------------------------------------------------------------------------
#Push into GitHub command
-------------------------------------------------------------------------------------------------------------------

# Stage the changes:
# To prepare the changes for committing, you need to "stage" them using the git add command.

git add .

git add filename

# Commit the changes:

git commit -m "A description of the changes you made"

# Push the changes to GitHub:

git push

git push origin master

# check 

git status

-------------------------------------------------------------------------------------------------------------------
#Turtlebot3 nav2 command  #to move without map 
-------------------------------------------------------------------------------------------------------------------

#terminal 1

source ./install/setup.bash  

export GAZEBO_MODEL_PATH=$GAZEBO_MODEL_PATH:~/turtlebot3_ws/src/turtlebot3/turtlebot3_simulations/turtlebot3_gazebo/models

export TURTLEBOT3_MODEL=waffle_pi 

ros2 launch tb3_sim turtlebot3_world.launch.py  

# terminal 2 (to create map) #SLAM_TOOLBOX


source ./install/setup.bash
ros2 launch slam_toolbox online_async_launch.py

# terminal 3 (open rviz)

source ./install/setup.bash
rviz2 

#terminal 4 (teleop_keyboard)

source ./install/setup.bash
ros2 run teleop_twist_keyboard teleop_twist_keyboard

-------------------------------------------------------------------------------------------------------------------
#Turtlebot3 nav2 command
-------------------------------------------------------------------------------------------------------------------

#terminal 1

source ./install/setup.bash  (setup terminal)

export GAZEBO_MODEL_PATH=$GAZEBO_MODEL_PATH:~/turtlebot3_ws/src/turtlebot3/turtlebot3_simulations/turtlebot3_gazebo/models

export TURTLEBOT3_MODEL=waffle_pi  (Gazebo file path and pick robot model)

ros2 launch tb3_sim turtlebot3_world.launch.py  (launch tb3 simulation)

# terminal 2 (nav2 + amcl initial pose) 

source ./install/setup.bash
ros2 launch tb3_sim nav2.launch.py

#terminal 3 (autonomy behavior)

source ./install/setup.bash
ros2 launch tb3_autonomy autonomy.launch.py






